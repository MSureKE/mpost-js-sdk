{"code":"import fetch from \"isomorphic-unfetch\";\r\nexport class Base {\r\n    apiKey;\r\n    baseUrl;\r\n    constructor(config) {\r\n        this.apiKey = config.apiKey;\r\n        this.baseUrl = config.baseUrl || \"http://13.36.21.26/api/client\";\r\n    }\r\n    request(endpoint, options) {\r\n        const url = `${this.baseUrl}${endpoint}`;\r\n        const headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            \"api-key\": this.apiKey,\r\n        };\r\n        const config = {\r\n            ...options,\r\n            headers,\r\n        };\r\n        return fetch(url, config).then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            throw new Error(response.statusText);\r\n        });\r\n    }\r\n}\r\n","references":["E:/Dev/WebProjects/mpost/mpost-js-sdk/node_modules/isomorphic-unfetch/index.d.ts"],"dts":{"name":"E:/Dev/WebProjects/mpost/mpost-js-sdk/dist/base.d.ts","writeByteOrderMark":false,"text":"declare type Config = {\r\n    apiKey: string;\r\n    baseUrl?: string;\r\n};\r\nexport declare abstract class Base {\r\n    private apiKey;\r\n    private baseUrl;\r\n    constructor(config: Config);\r\n    protected request<T>(endpoint: string, options?: RequestInit): Promise<T>;\r\n}\r\nexport {};\r\n"}}
